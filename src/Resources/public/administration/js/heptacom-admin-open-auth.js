(this.webpackJsonp=this.webpackJsonp||[]).push([["heptacom-admin-open-auth"],{"0AMJ":function(e){e.exports=JSON.parse('{"heptacom-admin-open-auth-client":{"module":{"description":"Allow OAuth providers to provide admin logins","name":"HEPTACOM Open Authentication Login","title":"OAuth Login"},"pages":{"create":{"actions":{"create":"Choose"}},"listing":{"actions":{"create":"Create","refresh":"Refresh"},"columns":{"createdAt":"Created","name":"Name","provider":"Provider"}}}}}')},"2EeP":function(e){e.exports=JSON.parse('{"heptacom-admin-open-auth-client":{"module":{"description":"Erlaubt die Anmeldung über OAuth Anbieter","name":"HEPTACOM Open Authentication Login","title":"OAuth Anmeldung"},"pages":{"create":{"actions":{"create":"Auswählen"}},"listing":{"actions":{"create":"Erstellen","refresh":"Neuladen"},"columns":{"createdAt":"Erstellt","name":"Name","provider":"Anbieter"}}}}}')},"AS+X":function(e,t){e.exports='{% block heptacom_admin_open_auth_client_create_page %}\n    <sw-page\n        :showSmartBar="false"\n        :showSearchBar="false"\n        class="heptacom-admin-open-auth-client-create-page"\n    >\n        {% block heptacom_admin_open_auth_client_create_page_inner %}{% endblock %}\n\n        {% block heptacom_admin_open_auth_client_create_page_content %}\n            <template #content>\n                <template\n                    v-if="isLoading"\n                >\n                    {% block heptacom_admin_open_auth_client_create_page_content_loader %}\n                        <sw-loader></sw-loader>\n                    {% endblock %}\n                </template>\n                <template\n                    v-else\n                >\n                    {% block heptacom_admin_open_auth_client_create_page_content_providers %}\n                        <sw-card-view>\n                            {% block heptacom_admin_open_auth_client_create_page_content_providers_list %}\n                                <sw-card\n                                    v-for="provider of items"\n                                    :key="provider.key"\n                                    :title="provider.label"\n                                    :classes="provider.classes"\n                                    hero\n                                    large\n                                >\n                                    {% block heptacom_admin_open_auth_client_create_page_content_providers_list_item %}\n                                        {% block heptacom_admin_open_auth_client_create_page_content_providers_list_item_action %}\n                                            <sw-button\n                                                @click="createClient(provider)"\n                                                class="heptacom-admin-open-auth-client-create-page-providers-provider--action"\n                                                variant="ghost"\n                                                block\n                                            >\n                                                {{ provider.actionLabel }}\n                                            </sw-button>\n                                        {% endblock %}\n                                    {% endblock %}\n                                </sw-card>\n                            {% endblock %}\n                        </sw-card-view>\n                    {% endblock %}\n                </template>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'},E3ec:function(e){e.exports=JSON.parse('{"sw-profile-index":{"titleHeptacomAdminOpenAuthCard":"OAuth","heptacomAdminOpenAuth":{"userKeys":{"columns":{"provider":"Provider","createdAt":"Connected at"},"actions":{"connect":"Connect","revoke":"Disconnect"}}}}}')},EZ4G:function(e,t,n){"use strict";n.r(t);var i=n("h7FN"),a=n.n(i);const{Component:o,Context:r,Data:c}=Shopware,{Criteria:s}=c;o.override("sw-profile-index",{template:a.a,data:()=>({heptacomAdminOpenAuthLoading:!0,heptacomAdminOpenAuthClients:[]}),computed:{heptacomAdminOpenAuthClientsRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_client")},heptacomAdminOpenAuthUserEmailsRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_user_email")},heptacomAdminOpenAuthUserKeysRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_user_key")},heptacomAdminOpenAuthUserTokensRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_user_token")}},methods:{loadHeptacomAdminOpenAuth(e){this.heptacomAdminOpenAuthLoading=!0,this.heptacomAdminOpenAuthClients=[];const t=new s;return t.getAssociation("userKeys").addFilter(s.equals("userId",e)),t.getAssociation("userEmails").addFilter(s.equals("userId",e)),t.getAssociation("userTokens").addFilter(s.equals("userId",e)),this.heptacomAdminOpenAuthClientsRepository.search(t,r.api).then(e=>{this.heptacomAdminOpenAuthClients=e.filter(e=>e.active&&e.connect||e.userKeys.length>0),this.heptacomAdminOpenAuthLoading=!1})},revokeHeptacomAdminOpenAuthUserKey(e){return Promise.all([...e.userKeys.map(e=>this.heptacomAdminOpenAuthUserKeysRepository.delete(e.id,r.api)),...e.userEmails.map(e=>this.heptacomAdminOpenAuthUserEmailsRepository.delete(e.id,r.api)),...e.userTokens.map(e=>this.heptacomAdminOpenAuthUserTokensRepository.delete(e.id,r.api))]).then(()=>this.loadHeptacomAdminOpenAuth(this.user.id))},redirectToLoginMask(e){this.heptacomAdminOpenAuthClientsRepository.httpClient.get(`/_admin/open-auth/${e}/connect`).then(e=>{window.location.href=e.data.target})},getUserData(){return this.$super("getUserData").then(e=>this.loadHeptacomAdminOpenAuth(e.id).then(()=>e))}}});var p=n("AS+X"),l=n.n(p);const{Classes:d}=Shopware,{ApiService:m}=d;var h=class extends m{constructor(e,t,n="heptacom_admin_open_auth_provider"){super(e,t,n)}list(){const e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/list`,{headers:e}).then(e=>m.handleResponse(e))}factorize(e){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/factorize`,{provider_key:e},{headers:t}).then(e=>m.handleResponse(e))}};const{Component:_}=Shopware;_.register("heptacom-admin-open-auth-client-create-page",{template:l.a,inject:["HeptacomAdminOpenAuthProviderApiService"],data:()=>({isLoading:!0,items:null}),created(){this.loadData()},methods:{loadData(){this.isLoading=!0,this.loadProviders().then(()=>{this.isLoading=!1})},loadProviders(){return this.items=[],this.HeptacomAdminOpenAuthProviderApiService.list().then(e=>{this.items=e.data.map(e=>({key:e,label:this.$t(`heptacomAdminOpenAuthClient.providers.${e}`),actionLabel:this.$te(`.heptacomAdminOpenAuthClient.providersCreate.${e}`)?this.$t(`heptacomAdminOpenAuthClient.providersCreate.${e}`):this.$t("heptacom-admin-open-auth-client.pages.create.actions.create"),classes:["heptacom-admin-open-auth-client-create-page-providers-provider",`heptacom-admin-open-auth-client-create-page-providers--provider-${e}`]})).sort((e,t)=>e.label.localeCompare(t.label)),this.isLoading=!1})},createClient(e){return this.HeptacomAdminOpenAuthProviderApiService.factorize(e.key)}}});var u=n("NHzf"),g=n.n(u);const{Component:A,Context:b,Data:v,Mixin:k}=Shopware,{Criteria:w}=v;A.register("heptacom-admin-open-auth-client-listing-page",{template:g.a,inject:["repositoryFactory"],mixins:[k.getByName("listing")],data(){return{isLoading:!0,items:null,columns:[{property:"name",label:this.$t("heptacom-admin-open-auth-client.pages.listing.columns.name")},{property:"provider",label:this.$t("heptacom-admin-open-auth-client.pages.listing.columns.provider")},{property:"createdAt",label:this.$t("heptacom-admin-open-auth-client.pages.listing.columns.createdAt"),width:"200px"}]}},created(){this.getList()},computed:{clientRepository(){return this.repositoryFactory.create("heptacom_admin_open_auth_client")},clientCriteria(){const e=new w,t=this.getListingParams();return e.setLimit(t.limit),e.setPage(t.page),e.addSorting(w.sort(t.sortBy||"name",t.sortDirection||"ASC")),t.term&&t.term.length&&e.addFilter(w.contains("name",t.term)),e}},methods:{getList(){return this.loadData()},loadData(){this.isLoading=!0,this.loadClients().then(()=>{this.isLoading=!1})},loadClients(){return this.items=[],this.clientRepository.search(this.clientCriteria,b.api).then(e=>{this.items=e})}}});var f={"de-DE":n("2EeP"),"en-GB":n("0AMJ")};const{Module:y}=Shopware;y.register("heptacom-admin-open-auth-client",{type:"plugin",name:"heptacom-admin-open-auth-client.module.name",title:"heptacom-admin-open-auth-client.module.title",description:"heptacom-admin-open-auth-client.module.description",color:"#FFC2A2",icon:"default-action-log-in",snippets:f,routes:{create:{component:"heptacom-admin-open-auth-client-create-page",path:"create"},settings:{component:"heptacom-admin-open-auth-client-listing-page",path:"settings"}},settingsItem:[{to:"heptacom.admin.open.auth.client.settings",group:"system",icon:"default-action-log-in"}]});const{Application:O}=Shopware;O.addServiceProvider("HeptacomAdminOpenAuthProviderApiService",e=>{const t=O.getContainer("init");return new h(t.httpClient,e.loginService)});var C={"de-DE":n("gVjC"),"en-GB":n("vwSk")},S={"de-DE":n("UaGI"),"en-GB":n("E3ec")};const{Locale:x}=Shopware;[C,S].map(Object.entries).flat().forEach(([e,t])=>x.extend(e,t))},NHzf:function(e,t){e.exports='{% block heptacom_admin_open_auth_client_listing_page %}\n    <sw-page class="heptacom-admin-open-auth-client-listing-page">\n        {% block heptacom_admin_open_auth_client_listing_page_inner %}\n        {% endblock %}\n\n        {% block heptacom_admin_open_auth_client_listing_page_search_bar %}\n            <template #search-bar>\n                <sw-search-bar\n                    :initialSearch="term"\n                    @search="onSearch"\n                    initialSearchType="heptacom_admin_open_auth_client"\n                ></sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block heptacom_admin_open_auth_client_listing_page_search_bar_actions %}\n            <template #smart-bar-actions>\n                <sw-button\n                    :routerLink="{ name: \'heptacom.admin.open.auth.client.create\' }"\n                    variant="primary"\n                >\n                    {{ $t(\'heptacom-admin-open-auth-client.pages.listing.actions.create\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        {% block heptacom_admin_open_auth_client_listing_page_content %}\n            <template #content>\n                {% block heptacom_admin_open_auth_client_listing_page_content_entity_listing %}\n                    <sw-entity-listing\n                        v-if="items"\n                        :items="items"\n                        :repository="clientRepository"\n                        :showSelection="false"\n                        :columns="columns"\n                        :isLoading="!isLoading"\n                        :showActions="false"\n                    >\n                        {% block heptacom_admin_open_auth_client_listing_page_content_entity_listing_inner %}\n                        {% endblock %}\n\n                        {% block heptacom_admin_open_auth_client_listing_page_content_entity_listing_columns_created_at %}\n                            <template #column-createdAt="{ item }">\n                                {{ item.createdAt | date({ hour: \'2-digit\', minute: \'2-digit\' }) }}\n                            </template>\n                        {% endblock %}\n\n                        {% block heptacom_admin_open_auth_client_listing_page_content_entity_listing_columns_provider %}\n                            <template #column-provider="{ item }">\n                                {{ $te(\'heptacomAdminOpenAuthClient.providers.\' + item.provider) ? $t(\'heptacomAdminOpenAuthClient.providers.\' + item.provider) : item.provider }}\n                            </template>\n                        {% endblock %}\n\n                        {% block heptacom_admin_open_auth_client_listing_page_content_entity_listing_pagination %}\n                            <template #pagination>\n                                <sw-pagination\n                                    :page="page"\n                                    :limit="limit"\n                                    :total="total"\n                                    :total-visible="7"\n                                    @page-change="onPageChange"\n                                ></sw-pagination>\n                            </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block heptacom_admin_open_auth_client_listing_page_sidebar_container %}\n            <template #sidebar>\n                {% block heptacom_admin_open_auth_client_listing_page_sidebar %}\n                    <sw-sidebar>\n                        {% block heptacom_admin_open_auth_client_listing_page_sidebar_inner %}\n                        {% endblock %}\n\n                        {% block heptacom_admin_open_auth_client_listing_page_sidebar_refresh %}\n                            <sw-sidebar-item\n                                :title="$tc(\'heptacom-admin-open-auth-client.pages.listing.actions.refresh\')"\n                                @click="onRefresh"\n                                icon="default-arrow-360-left"\n                            ></sw-sidebar-item>\n                        {% endblock %}\n                    </sw-sidebar>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'},UaGI:function(e){e.exports=JSON.parse('{"sw-profile-index":{"titleHeptacomAdminOpenAuthCard":"OAuth","heptacomAdminOpenAuth":{"userKeys":{"columns":{"provider":"Anbieter","createdAt":"Verbunden am"},"actions":{"connect":"Verbinden","revoke":"Verbindung trennen"}}}}}')},gVjC:function(e){e.exports=JSON.parse('{"global":{"entities":{"heptacom_admin_open_auth_client":"OAuth Anmeldung"}},"heptacomAdminOpenAuthClient":{"providers":{"microsoft_azure":"Microsoft Azure","jira":"Atlassian Jira"}}}')},h7FN:function(e,t){e.exports='{% block sw_profile_index_content %}\n    {% parent %}\n\n    {% block sw_profile_index_heptacom_admin_open_auth_card %}\n        <sw-card\n            :title="$tc(\'sw-profile-index.titleHeptacomAdminOpenAuthCard\')"\n            :isLoading="isUserLoading"\n            class="sw-profile__card sw-card--grid"\n        >\n            {% block sw_profile_index_heptacom_admin_open_auth_card_clients %}\n                <template>\n                    {% block sw_profile_index_heptacom_admin_open_auth_card_clients_cards %}\n                        <sw-container rows="1fr">\n                            <sw-card-section\n                                v-for="client of heptacomAdminOpenAuthClients"\n                                :key="client.id"\n                                divider="bottom"\n                            >\n                                {% block sw_profile_index_heptacom_admin_open_auth_card_clients_cards_item %}\n                                    <sw-container columns="1fr auto">\n                                        {% block sw_profile_index_heptacom_admin_open_auth_card_clients_cards_item_provider %}\n                                            <div>\n                                                {{ $te(\'heptacomAdminOpenAuthClient.providers.\' + client.provider)\n                                                    ? $t(\'heptacomAdminOpenAuthClient.providers.\' + client.provider)\n                                                    : client.provider }}\n                                            </div>\n                                        {% endblock %}\n\n                                        {% block sw_profile_index_heptacom_admin_open_auth_card_clients_cards_item_action %}\n                                            <sw-button\n                                                v-if="client.userKeys.length > 0"\n                                                @click="revokeHeptacomAdminOpenAuthUserKey(client)"\n                                                icon="default-basic-x-line"\n                                            >\n                                                {{ $t(\'sw-profile-index.heptacomAdminOpenAuth.userKeys.actions.revoke\') }}\n                                            </sw-button>\n                                            <sw-button\n                                                v-else-if="client.active && client.connect"\n                                                @click="redirectToLoginMask(client.id)"\n                                                icon="default-basic-x-line"\n                                            >\n                                                {{ $t(\'sw-profile-index.heptacomAdminOpenAuth.userKeys.actions.connect\') }}\n                                            </sw-button>\n                                        {% endblock %}\n                                    </sw-container>\n                                {% endblock %}\n                            </sw-card-section>\n                        </sw-container>\n                    {% endblock %}\n                </template>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n{% endblock %}\n'},vwSk:function(e){e.exports=JSON.parse('{"global":{"entities":{"heptacom_admin_open_auth_client":"OAuth Login"}},"heptacomAdminOpenAuthClient":{"providers":{"microsoft_azure":"Microsoft Azure","jira":"Atlassian Jira"}}}')}},[["EZ4G","runtime"]]]);